/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RealApp.java
 *
 * Created on 2011-11-11, 22:40:22
 */

package org.netbeans.zp.gui;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.application.Action;
import org.jivesoftware.smack.XMPPException;
import org.netbeans.zp.client.XMPPClient;

/**
 *
 * @author Dom
 */
public class RealApp extends javax.swing.JDialog implements Runnable {
    private String nickname;
    private ArrayList<String> buddies;
    private ArrayList<String> rooms;
    private ArrayList<String> selectedFriends;
    private ArrayList<String> selectedRooms;
    private DefaultListModel friendsItems = new DefaultListModel();
    private DefaultListModel roomsItems = new DefaultListModel();
    private int selectedFriendsNumber = 0;
    private int selectedRoomsNumber = 0;
    private ListSelectionListener fl = new ListSelectionListener(){
        public void valueChanged(ListSelectionEvent e){
            if (e.getValueIsAdjusting())
                return;
            selectedFriendsNumber = friendsList.getSelectedValues().length;
            if ( selectedFriendsNumber == 1){
                selectedFriends = new ArrayList<String>();
                selectedFriends.add(friendsList.getSelectedValue().toString());
            }
            else{
                selectedFriends = new ArrayList<String>();
                for (Object item : friendsList.getSelectedValues())
                    selectedFriends.add(item.toString());
            }
        }
    };
    

    /** Creates new form RealApp */
    public RealApp(java.awt.Frame parent, boolean modal, String login) {
        super(parent, modal);
        initComponents();
        this.setMinimumSize(new Dimension(400, 400));
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        nickname = login;
        buddies = XMPPClient.getInstance().getBuddiesList();
        fillBuddiesList();
    }
    
    public void fillBuddiesList(){
        friendsList = new JList(friendsItems);
        for (int i = 0; i < buddies.size(); i++){
            friendsItems.addElement(buddies.get(i));
        }
    }
    
    @Action
    public void showAddContactBox(){
        if (addContactBox == null){
            addContactBox = new AddContact(KomunikatorApp.getApplication().getMainFrame(), true, friendsItems);
            addContactBox.setTitle("Dodaj znajomego");
            addContactBox.setLocationRelativeTo(this);
            addContactBox.setVisible(true);
            addContactBox.setEnabled(true);
        }
        else{
            addContactBox.dispose();
            addContactBox = null;
            showAddContactBox();
        }
    }
    
    @Action
    public void showStartChatBox(){
        if (startChatBox == null){
            startChatBox = new StartChat(KomunikatorApp.getApplication().getMainFrame(), true, nickname, buddies);
            startChatBox.setTitle("Rozpocznij rozmowÄ™ z...");
            startChatBox.setLocationRelativeTo(this);
            startChatBox.setVisible(true);
            startChatBox.setEnabled(true);
        }
        else{
            startChatBox.dispose();
            startChatBox = null;
            showStartChatBox();
        }
    }
    
    @Action
    public void closeApp(){
        dispose();
        KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        canvas1 = new java.awt.Canvas();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendsList = new javax.swing.JList();
        jComboBox1 = new javax.swing.JComboBox();
        logoutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        createBtn = new javax.swing.JButton();
        sendPMBtn = new javax.swing.JButton();
        joinBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        javax.swing.JMenuItem addContact = new javax.swing.JMenuItem();
        startChat = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        editUser = new javax.swing.JMenuItem();
        removeUser = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        closeChat = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        clearArchives = new javax.swing.JMenuItem();
        showArchives = new javax.swing.JMenuItem();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.netbeans.zp.gui.KomunikatorApp.class).getContext().getResourceMap(RealApp.class);
        menu1.setLabel(resourceMap.getString("menu1.label")); // NOI18N
        menuBar1.add(menu1);

        menu2.setLabel(resourceMap.getString("menu2.label")); // NOI18N
        menuBar1.add(menu2);

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N
        jPopupMenu1.getAccessibleContext().setAccessibleParent(friendsList);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(400, 250));
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        canvas1.setName("canvas1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        friendsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        friendsList.setName("friendsList"); // NOI18N
        friendsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                friendsListMouseClicked(evt);
            }
        });
        friendsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                friendsListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(friendsList);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Online", "Offline" }));
        jComboBox1.setName("jComboBox1"); // NOI18N

        logoutButton.setText(resourceMap.getString("logoutButton.text")); // NOI18N
        logoutButton.setName("logoutButton"); // NOI18N
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        createBtn.setText(resourceMap.getString("createBtn.text")); // NOI18N
        createBtn.setName("createBtn"); // NOI18N
        createBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createBtnMouseClicked(evt);
            }
        });

        sendPMBtn.setText(resourceMap.getString("sendPMBtn.text")); // NOI18N
        sendPMBtn.setName("sendPMBtn"); // NOI18N
        sendPMBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendPMBtnMouseClicked(evt);
            }
        });

        joinBtn.setText(resourceMap.getString("joinBtn.text")); // NOI18N
        joinBtn.setName("joinBtn"); // NOI18N
        joinBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinBtnMouseClicked(evt);
            }
        });

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(org.netbeans.zp.gui.KomunikatorApp.class).getContext().getActionMap(RealApp.class, this);
        addContact.setAction(actionMap.get("showAddContactBox")); // NOI18N
        addContact.setIcon(resourceMap.getIcon("addContact.icon")); // NOI18N
        addContact.setText(resourceMap.getString("addContact.text")); // NOI18N
        addContact.setName("addContact"); // NOI18N
        addContact.setNextFocusableComponent(startChat);
        jMenu1.add(addContact);

        startChat.setAction(actionMap.get("showStartChatBox")); // NOI18N
        startChat.setIcon(resourceMap.getIcon("startChat.icon")); // NOI18N
        startChat.setText(resourceMap.getString("startChat.text")); // NOI18N
        startChat.setName("startChat"); // NOI18N
        jMenu1.add(startChat);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jMenu1.add(jSeparator2);

        editUser.setIcon(resourceMap.getIcon("editUser.icon")); // NOI18N
        editUser.setText(resourceMap.getString("editUser.text")); // NOI18N
        editUser.setName("editUser"); // NOI18N
        jMenu1.add(editUser);

        removeUser.setIcon(resourceMap.getIcon("removeUser.icon")); // NOI18N
        removeUser.setText(resourceMap.getString("removeUser.text")); // NOI18N
        removeUser.setName("removeUser"); // NOI18N
        removeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserActionPerformed(evt);
            }
        });
        jMenu1.add(removeUser);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jMenu1.add(jSeparator1);

        closeChat.setAction(actionMap.get("closeApp")); // NOI18N
        closeChat.setIcon(resourceMap.getIcon("closeChat.icon")); // NOI18N
        closeChat.setText(resourceMap.getString("closeChat.text")); // NOI18N
        closeChat.setName("closeChat"); // NOI18N
        jMenu1.add(closeChat);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        clearArchives.setIcon(resourceMap.getIcon("clearArchives.icon")); // NOI18N
        clearArchives.setText(resourceMap.getString("clearArchives.text")); // NOI18N
        clearArchives.setName("clearArchives"); // NOI18N
        jMenu2.add(clearArchives);

        showArchives.setIcon(resourceMap.getIcon("showArchives.icon")); // NOI18N
        showArchives.setText(resourceMap.getString("showArchives.text")); // NOI18N
        showArchives.setName("showArchives"); // NOI18N
        jMenu2.add(showArchives);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoutButton)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(sendPMBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(joinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(10, 10, 10)
                                .addComponent(jComboBox1, 0, 100, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutButton)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sendPMBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(joinBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        // TODO add your handling code here:
        //wyloguj
        XMPPClient.getInstance().disconnect();
        dispose();
        KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.dispose();
        KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
        try {
            XMPPClient.getInstance().connect();
        } catch (XMPPException ex) {
            Logger.getLogger(RealApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void friendsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendsListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_friendsListMouseClicked

    private void removeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserActionPerformed
        try {
            // TODO add your handling code here:
            XMPPClient.getInstance().removeUser();
        } catch (XMPPException ex) {
            Logger.getLogger(RealApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_removeUserActionPerformed

    private void sendPMBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendPMBtnMouseClicked
        // TODO add your handling code here:
        if (ChatDlg == null){
            ChatDlg = new Chat(KomunikatorApp.getApplication().getMainFrame(), true, nickname, buddies.get(0));
            ChatDlg.setTitle(buddies.get(0));
            ChatDlg.setLocationRelativeTo(this);
            ChatDlg.setEnabled(true);
        }
        else{
            ChatDlg.dispose();
            ChatDlg = null;
            sendPMBtnMouseClicked(evt);
        }
    }//GEN-LAST:event_sendPMBtnMouseClicked

    private void createBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createBtnMouseClicked
        // TODO add your handling code here:
        if (createCollaborationBox == null){
            createCollaborationBox = new CreateCollaborationBox(KomunikatorApp.getApplication().getMainFrame(), 
                    true, nickname);
            createCollaborationBox.setTitle("UtwÃ³rz pokÃ³j wspÃ³Å‚pracy nad kodem");
            createCollaborationBox.setLocationRelativeTo(this);
            createCollaborationBox.setVisible(true);
            createCollaborationBox.setEnabled(true);
        }
        else{
            createCollaborationBox.dispose();
            createCollaborationBox = null;
            createBtnMouseClicked(evt);
        }
    }//GEN-LAST:event_createBtnMouseClicked

    private void joinBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joinBtnMouseClicked
        // TODO add your handling code here:
            if (joinCollaborationBox == null){
                joinCollaborationBox = new JoinCollaborationBox(KomunikatorApp.getApplication().getMainFrame(),
                        true, nickname);
                joinCollaborationBox.setTitle("DoÅ‚Ä…cz do pokoju...");
                joinCollaborationBox.setLocationRelativeTo(this);
                joinCollaborationBox.setVisible(true);
                joinCollaborationBox.setEnabled(true);
            }
            else{
                joinCollaborationBox.dispose();
                joinCollaborationBox = null;
                joinBtnMouseClicked(evt);
            }
    }//GEN-LAST:event_joinBtnMouseClicked

    private void friendsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_friendsListValueChanged
        // TODO add your handling code here:
        if (evt.getValueIsAdjusting())
                return;
        selectedFriendsNumber = friendsList.getSelectedValues().length;
            
        if (selectedFriendsNumber == 0){
            sendPMBtn.setEnabled(false);           
        }
        else if (selectedFriendsNumber == 1){
            sendPMBtn.setEnabled(true);
            selectedFriends = new ArrayList<String>();
            selectedFriends.add(friendsList.getSelectedValue().toString());
        }
        else{
            sendPMBtn.setEnabled(false);
            selectedFriends = new ArrayList<String>();
            for (Object item : friendsList.getSelectedValues())
                selectedFriends.add(item.toString());
        }
    }//GEN-LAST:event_friendsListValueChanged

    /**
    * @param args the command line arguments
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas canvas1;
    private javax.swing.JMenuItem clearArchives;
    private javax.swing.JMenuItem closeChat;
    private javax.swing.JButton createBtn;
    private javax.swing.JMenuItem editUser;
    private javax.swing.JList friendsList;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton joinBtn;
    private javax.swing.JButton logoutButton;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JMenuItem removeUser;
    private javax.swing.JButton sendPMBtn;
    private javax.swing.JMenuItem showArchives;
    javax.swing.JMenuItem startChat;
    // End of variables declaration//GEN-END:variables
    
    private JDialog addContactBox;
    private JDialog startChatBox;
    private JDialog archivesBox;
    private JDialog codeBox;
    private JDialog codeAndChatBox;
    private JDialog codeAndConferenceBox;
    private JDialog ChatDlg;
    private JDialog createCollaborationBox;
    private JDialog joinCollaborationBox;

    public void run() {
        //throw new UnsupportedOperationException("Not supported yet.");
    }
}
