/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RealApp.java
 *
 * Created on 2011-11-11, 22:40:22
 */
package org.netbeans.zp.gui;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import org.jdesktop.application.Action;
import org.jivesoftware.smack.XMPPException;
import org.netbeans.zp.client.ClientMessageListener;
import org.netbeans.zp.client.XMPPClient;
import org.netbeans.zp.message.Message;
import org.netbeans.zp.message.MessageType;
import org.netbeans.zp.message.PrivateMessage;

/**
 *
 * @author Dom
 */
public class RealApp extends javax.swing.JDialog implements ClientMessageListener, Runnable {

  private String nickname;
  private ArrayList<String> buddies;
  private String selectedFriend;
  private JScrollPane friendsListScroll;
  private JList friendsList;
  private DefaultListModel friendsItems = new DefaultListModel();
  private ArrayList<Chat> chatWindows = new ArrayList<Chat>();
  private ListDataListener ldl = new ListDataListener() {

    public void intervalAdded(ListDataEvent e) {
      friendsList.repaint();
      //fillBuddiesList();
    }

    public void intervalRemoved(ListDataEvent e) {
      friendsList.repaint();
      //fillBuddiesList();
    }

    public void contentsChanged(ListDataEvent e) {
      friendsList.repaint();
      //fillBuddiesList();
    }
  };

  /** Creates new form RealApp */
  public RealApp(java.awt.Frame parent, boolean modal, String login) {
    super(parent, modal);
    nickname = login;

    buddies = XMPPClient.getInstance().getBuddiesList();
    friendsList = new JList(friendsItems);
    add(friendsList);
    friendsItems.addListDataListener(ldl);
    fillBuddiesList();
    initComponents();
    friendsList.setBounds(10, 60, 265, 360);
    friendsList.addMouseListener(new java.awt.event.MouseAdapter() {

      public void mouseClicked(java.awt.event.MouseEvent evt) {
        friendsListMouseClicked(evt);
      }
    });
    XMPPClient.getInstance().addMessageListener(this);
    this.setSize(new Dimension(300, 600));
    this.setMinimumSize(new Dimension(300, 600));
    this.setMaximumSize(new Dimension(300, 600));
    this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
  }

  public void fillBuddiesList() {
    for (int i = 0; i < buddies.size(); i++) {
      friendsItems.addElement(buddies.get(i));
    }
  }

  @Action
  public void showAddContactBox() {
    if (addContactBox == null) {
      addContactBox = new AddContact(KomunikatorApp.getApplication().getMainFrame(), true, friendsItems);
      addContactBox.setTitle("Dodaj znajomego");
      addContactBox.setLocationRelativeTo(this);
      addContactBox.setVisible(true);
      addContactBox.setEnabled(true);
    } else {
      addContactBox.dispose();
      addContactBox = null;
      showAddContactBox();
    }
  }

  @Action
  public void showStartChatBox() {
    if (startChatBox == null) {
      startChatBox = new StartChat(KomunikatorApp.getApplication().getMainFrame(), true, this, nickname, friendsItems);
      startChatBox.setTitle("Rozpocznij rozmowÄ™ z...");
      startChatBox.setLocationRelativeTo(this);
      startChatBox.setVisible(true);
      startChatBox.setEnabled(true);
    } else {
      startChatBox.dispose();
      startChatBox = null;
      showStartChatBox();
    }
  }

  @Action
  public void closeApp() {
    XMPPClient.getInstance().disconnect();
    dispose();
    KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        logoutButton = new javax.swing.JButton();
        createBtn = new javax.swing.JButton();
        sendPMBtn = new javax.swing.JButton();
        joinBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        javax.swing.JMenuItem addContact = new javax.swing.JMenuItem();
        startChat = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        editUser = new javax.swing.JMenuItem();
        removeUser = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        closeChat = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        clearArchives = new javax.swing.JMenuItem();
        showArchives = new javax.swing.JMenuItem();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.netbeans.zp.gui.KomunikatorApp.class).getContext().getResourceMap(RealApp.class);
        menu1.setLabel(resourceMap.getString("menu1.label")); // NOI18N
        menuBar1.add(menu1);

        menu2.setLabel(resourceMap.getString("menu2.label")); // NOI18N
        menuBar1.add(menu2);

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(300, 500));
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        logoutButton.setText(resourceMap.getString("logoutButton.text")); // NOI18N
        logoutButton.setName("logoutButton"); // NOI18N
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });

        createBtn.setText(resourceMap.getString("createBtn.text")); // NOI18N
        createBtn.setName("createBtn"); // NOI18N
        createBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createBtnMouseClicked(evt);
            }
        });

        sendPMBtn.setText(resourceMap.getString("sendPMBtn.text")); // NOI18N
        sendPMBtn.setName("sendPMBtn"); // NOI18N
        sendPMBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendPMBtnMouseClicked(evt);
            }
        });

        joinBtn.setText(resourceMap.getString("joinBtn.text")); // NOI18N
        joinBtn.setName("joinBtn"); // NOI18N
        joinBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinBtnMouseClicked(evt);
            }
        });

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(org.netbeans.zp.gui.KomunikatorApp.class).getContext().getActionMap(RealApp.class, this);
        addContact.setAction(actionMap.get("showAddContactBox")); // NOI18N
        addContact.setIcon(resourceMap.getIcon("addContact.icon")); // NOI18N
        addContact.setText(resourceMap.getString("addContact.text")); // NOI18N
        addContact.setName("addContact"); // NOI18N
        addContact.setNextFocusableComponent(startChat);
        jMenu1.add(addContact);

        startChat.setAction(actionMap.get("showStartChatBox")); // NOI18N
        startChat.setIcon(resourceMap.getIcon("startChat.icon")); // NOI18N
        startChat.setText(resourceMap.getString("startChat.text")); // NOI18N
        startChat.setName("startChat"); // NOI18N
        jMenu1.add(startChat);

        jSeparator2.setName("jSeparator2"); // NOI18N
        jMenu1.add(jSeparator2);

        editUser.setIcon(resourceMap.getIcon("editUser.icon")); // NOI18N
        editUser.setText(resourceMap.getString("editUser.text")); // NOI18N
        editUser.setName("editUser"); // NOI18N
        editUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserActionPerformed(evt);
            }
        });
        jMenu1.add(editUser);

        removeUser.setIcon(resourceMap.getIcon("removeUser.icon")); // NOI18N
        removeUser.setText(resourceMap.getString("removeUser.text")); // NOI18N
        removeUser.setName("removeUser"); // NOI18N
        removeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserActionPerformed(evt);
            }
        });
        jMenu1.add(removeUser);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jMenu1.add(jSeparator1);

        closeChat.setAction(actionMap.get("closeApp")); // NOI18N
        closeChat.setIcon(resourceMap.getIcon("closeChat.icon")); // NOI18N
        closeChat.setText(resourceMap.getString("closeChat.text")); // NOI18N
        closeChat.setName("closeChat"); // NOI18N
        jMenu1.add(closeChat);

        jMenuBar1.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N

        clearArchives.setIcon(resourceMap.getIcon("clearArchives.icon")); // NOI18N
        clearArchives.setText(resourceMap.getString("clearArchives.text")); // NOI18N
        clearArchives.setName("clearArchives"); // NOI18N
        jMenu2.add(clearArchives);

        showArchives.setIcon(resourceMap.getIcon("showArchives.icon")); // NOI18N
        showArchives.setText(resourceMap.getString("showArchives.text")); // NOI18N
        showArchives.setName("showArchives"); // NOI18N
        jMenu2.add(showArchives);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoutButton)
                    .addComponent(jLabel3)
                    .addComponent(joinBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(createBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(sendPMBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(sendPMBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(joinBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
      XMPPClient.getInstance().disconnect();
      dispose();
      KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      XMPPClient.getInstance().disconnect();
      KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
      try {
        XMPPClient.getInstance().connect();
      } catch (XMPPException ex) {
        Logger.getLogger(RealApp.class.getName()).log(Level.SEVERE, null, ex);
      }
      this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void removeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserActionPerformed

      KomunikatorApp.getApplication().show(KomunikatorApp.getApplication().getMainFrame());
      try {
        XMPPClient.getInstance().removeUser();
      } catch (XMPPException ex) {
        Logger.getLogger(RealApp.class.getName()).log(Level.SEVERE, null, ex);
      }
      dispose();
    }//GEN-LAST:event_removeUserActionPerformed

    private void sendPMBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendPMBtnMouseClicked
      // TODO add your handling code here:
      if (selectedFriend == null) {
        return;
      }
      System.out.println("WiadomoÅ›Ä‡ prywatna");

      Chat ChatDlg = new Chat(KomunikatorApp.getApplication().getMainFrame(), true, this, nickname, selectedFriend);
      ChatDlg.setTitle(selectedFriend);
      ChatDlg.setLocationRelativeTo(this);
      ChatDlg.setVisible(true);
      chatWindows.add(ChatDlg);

    }//GEN-LAST:event_sendPMBtnMouseClicked

    private void createBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createBtnMouseClicked
      // TODO add your handling code here:
      if (createCollaborationBox == null) {
        createCollaborationBox = new CreateCollaborationBox(KomunikatorApp.getApplication().getMainFrame(),
                true, this, nickname);
        createCollaborationBox.setTitle("UtwÃ³rz pokÃ³j wspÃ³Å‚pracy nad kodem");
        createCollaborationBox.setLocationRelativeTo(this);
        createCollaborationBox.setVisible(true);
        createCollaborationBox.setEnabled(true);
      } else {
        createCollaborationBox.dispose();
        createCollaborationBox = null;
        createBtnMouseClicked(evt);
      }
    }//GEN-LAST:event_createBtnMouseClicked

    private void joinBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joinBtnMouseClicked
      if (joinCollaborationBox == null) {
        joinCollaborationBox = new JoinCollaborationBox(KomunikatorApp.getApplication().getMainFrame(),
                true, this, nickname);
        joinCollaborationBox.setTitle("DoÅ‚Ä…cz do pokoju...");
        joinCollaborationBox.setLocationRelativeTo(this);
        joinCollaborationBox.setVisible(true);
        joinCollaborationBox.setEnabled(true);
      } else {
        joinCollaborationBox.dispose();
        joinCollaborationBox = null;
        joinBtnMouseClicked(evt);
      }
    }//GEN-LAST:event_joinBtnMouseClicked

    private void editUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserActionPerformed
      if (editUserBox == null) {
        editUserBox = new EditUserBox(KomunikatorApp.getApplication().getMainFrame(), true);
        editUserBox.setTitle("ZmieÅ„ dane swojego konta");
        editUserBox.setLocationRelativeTo(this);
        editUserBox.setVisible(true);
      } else {
        editUserBox.dispose();
        editUserBox = null;
        editUserActionPerformed(evt);
      }
    }//GEN-LAST:event_editUserActionPerformed

  private void friendsListMouseClicked(java.awt.event.MouseEvent evt) {
    try {
      selectedFriend = friendsList.getSelectedValue().toString();
      System.out.println(selectedFriend);
    } catch (NullPointerException ex) {
      System.out.println("Nie wybraÅ‚eÅ› znajomego");
    }
  }
  /**
   * @param args the command line arguments
   */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem clearArchives;
    private javax.swing.JMenuItem closeChat;
    private javax.swing.JButton createBtn;
    private javax.swing.JMenuItem editUser;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton joinBtn;
    private javax.swing.JButton logoutButton;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JMenuItem removeUser;
    private javax.swing.JButton sendPMBtn;
    private javax.swing.JMenuItem showArchives;
    javax.swing.JMenuItem startChat;
    // End of variables declaration//GEN-END:variables
  private JDialog addContactBox;
  private JDialog startChatBox;
  private JDialog archivesBox;
  private JDialog codeAndChatBox;
  private JDialog codeAndConferenceBox;
  private JDialog createCollaborationBox;
  private JDialog joinCollaborationBox;
  private JDialog editUserBox;

  public void run() {
    //throw new UnsupportedOperationException("Not supported yet.");
  }

  public void handle(Message message) {
    if (message.getType() == MessageType.PrivateMessage) {
      PrivateMessage msg = (PrivateMessage) message;
      for (Chat ch : chatWindows) {
        if (ch.getAddress().equals(msg.UserID)) {
          return;
        }
      }
      Chat ChatDlg = new Chat(KomunikatorApp.getApplication().getMainFrame(), true, this, nickname, msg.UserID);
      chatWindows.add(ChatDlg);
      ChatDlg.handle(message);
      ChatDlg.setTitle(msg.UserID);
      ChatDlg.setLocationRelativeTo(this);
      ChatDlg.setVisible(true);
    }
  }

  public void removeChat(Chat ch) {
    chatWindows.remove(ch);
  }
}
