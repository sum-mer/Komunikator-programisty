/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditUserBox.java
 *
 * Created on 2011-11-23, 21:40:30
 */
package org.netbeans.zp.gui;

import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.packet.Registration;
import org.netbeans.zp.client.RegistrationListener;
import org.netbeans.zp.client.XMPPClient;

/**
 *
 * @author Tomek
 */
public class EditUserBox extends javax.swing.JDialog implements RegistrationListener, Runnable {
    private Map<String, String> attr = null;
    /** Creates new form EditUserBox */
    public EditUserBox(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        XMPPClient.getInstance().setRegistrationListener(this);
        XMPPClient.getInstance().getInvitationMessage();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        passwordField1 = new javax.swing.JPasswordField();
        passwordField2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.netbeans.zp.gui.KomunikatorApp.class).getContext().getResourceMap(EditUserBox.class);
        loginField.setText(resourceMap.getString("loginField.text")); // NOI18N
        loginField.setName("loginField"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        updateBtn.setText(resourceMap.getString("updateBtn.text")); // NOI18N
        updateBtn.setName("updateBtn"); // NOI18N
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
        });

        passwordField1.setText(resourceMap.getString("passwordField1.text")); // NOI18N
        passwordField1.setName("passwordField1"); // NOI18N

        passwordField2.setText(resourceMap.getString("passwordField2.text")); // NOI18N
        passwordField2.setName("passwordField2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordField2)
                    .addComponent(updateBtn)
                    .addComponent(loginField, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(passwordField1))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBtn)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseClicked
        // TODO add your handling code here:
        String login = loginField.getText();
        String pass = String.valueOf( passwordField1.getPassword() );
      
        if (/*pass == String.valueOf( passwordField2.getPassword() ) && */login != null && pass != null){
      
            attr.put("username", login);
            attr.put("password", pass);

            System.out.println("'" + login + "' haslo: '" + pass + "'");
            try {
                XMPPClient.getInstance().setNewAttributes(attr);
            } catch (XMPPException ex) {
                Logger.getLogger(newUser.class.getName()).log(Level.SEVERE, null, ex);
            }
            //dispose();
        } 
        else {
            System.out.println("Hasła niezgodne!");
            JOptionPane.showMessageDialog( this, "Nie wszystkie pola zostały wypełnione");
            //jButton1MouseClicked(evt);
        }
    }//GEN-LAST:event_updateBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField loginField;
    private javax.swing.JPasswordField passwordField1;
    private javax.swing.JPasswordField passwordField2;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    public void invitation(Registration msg) {
        System.out.println("INSTR: " + msg.getInstructions() );
        attr = msg.getAttributes();
        int i = 0;
        for (String s : attr.keySet()) {
          System.out.println("Pole " + s);
        }
    }

    public void success(Registration msg) {
        JOptionPane.showMessageDialog( this.getParent() ,"Pomyślnie zmieniono dane użytkownika");
        dispose();
    }

    public void error(Registration msg) {
        System.out.println("Błąd " + msg.getError().getCode() + " type: " + msg.getError().getType().toString() + "msg: " + msg.getError().getMessage());
        JOptionPane.showMessageDialog( this ,"Aktualizacja danych nie powiodła się.");
        XMPPClient.getInstance().getInvitationMessage();
    }
    
    public void run() {
        
    }
}
